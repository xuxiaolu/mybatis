<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuxl.mybatis.mapper.RefundRequisitionMapper">
  <resultMap id="BaseResultMap" type="com.xuxl.mybatis.entities.RefundRequisition">
    <id column="id" javaType="Long" jdbcType="BIGINT" property="id" />
    <result column="requisition_no" jdbcType="VARCHAR" property="requisitionNo" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="sum_return_amount" jdbcType="DECIMAL" property="sumReturnAmount" />
    <result column="can_return_amount" jdbcType="DECIMAL" property="canReturnAmount" />
    <result column="factorage" jdbcType="DECIMAL" property="factorage" />
    <result column="fee_rate" jdbcType="DECIMAL" property="feeRate" />
    <result column="customer_login_name" jdbcType="VARCHAR" property="customerLoginName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
    <result column="creator_name" jdbcType="VARCHAR" property="creatorName" />
    <result column="modifier" jdbcType="INTEGER" property="modifier" />
    <result column="refund_no" jdbcType="VARCHAR" property="refundNo" />
    <result column="refund_create_time" jdbcType="TIMESTAMP" property="refundCreateTime" />
    <result column="refund_modify_time" jdbcType="TIMESTAMP" property="refundModifyTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, requisition_no, status, sum_return_amount, can_return_amount, factorage, fee_rate, 
    customer_login_name, create_time, modify_time, creator, creator_name, modifier, refund_no, 
    refund_create_time, refund_modify_time, remarks, version
  </sql>
  <select id="selectByExample" parameterType="com.xuxl.mybatis.entities.RefundRequisitionCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund_requisition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from refund_requisition
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from refund_requisition
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xuxl.mybatis.entities.RefundRequisitionCriteria">
    delete from refund_requisition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xuxl.mybatis.entities.RefundRequisition" useGeneratedKeys="true">
    insert into refund_requisition (requisition_no, status, sum_return_amount, 
      can_return_amount, factorage, fee_rate, 
      customer_login_name, create_time, modify_time, 
      creator, creator_name, modifier, 
      refund_no, refund_create_time, refund_modify_time, 
      remarks, version)
    values (#{requisitionNo,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{sumReturnAmount,jdbcType=DECIMAL}, 
      #{canReturnAmount,jdbcType=DECIMAL}, #{factorage,jdbcType=DECIMAL}, #{feeRate,jdbcType=DECIMAL}, 
      #{customerLoginName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=INTEGER}, #{creatorName,jdbcType=VARCHAR}, #{modifier,jdbcType=INTEGER}, 
      #{refundNo,jdbcType=VARCHAR}, #{refundCreateTime,jdbcType=TIMESTAMP}, #{refundModifyTime,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xuxl.mybatis.entities.RefundRequisition" useGeneratedKeys="true">
    insert into refund_requisition
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="requisitionNo != null">
        requisition_no,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sumReturnAmount != null">
        sum_return_amount,
      </if>
      <if test="canReturnAmount != null">
        can_return_amount,
      </if>
      <if test="factorage != null">
        factorage,
      </if>
      <if test="feeRate != null">
        fee_rate,
      </if>
      <if test="customerLoginName != null">
        customer_login_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="creatorName != null">
        creator_name,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="refundNo != null">
        refund_no,
      </if>
      <if test="refundCreateTime != null">
        refund_create_time,
      </if>
      <if test="refundModifyTime != null">
        refund_modify_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="requisitionNo != null">
        #{requisitionNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sumReturnAmount != null">
        #{sumReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="canReturnAmount != null">
        #{canReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="factorage != null">
        #{factorage,jdbcType=DECIMAL},
      </if>
      <if test="feeRate != null">
        #{feeRate,jdbcType=DECIMAL},
      </if>
      <if test="customerLoginName != null">
        #{customerLoginName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="creatorName != null">
        #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=INTEGER},
      </if>
      <if test="refundNo != null">
        #{refundNo,jdbcType=VARCHAR},
      </if>
      <if test="refundCreateTime != null">
        #{refundCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundModifyTime != null">
        #{refundModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xuxl.mybatis.entities.RefundRequisitionCriteria" resultType="java.lang.Long">
    select count(*) from refund_requisition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update refund_requisition
    <set>
      <if test="record.requisitionNo != null">
        requisition_no = #{record.requisitionNo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.sumReturnAmount != null">
        sum_return_amount = #{record.sumReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.canReturnAmount != null">
        can_return_amount = #{record.canReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.factorage != null">
        factorage = #{record.factorage,jdbcType=DECIMAL},
      </if>
      <if test="record.feeRate != null">
        fee_rate = #{record.feeRate,jdbcType=DECIMAL},
      </if>
      <if test="record.customerLoginName != null">
        customer_login_name = #{record.customerLoginName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.creatorName != null">
        creator_name = #{record.creatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.modifier != null">
        modifier = #{record.modifier,jdbcType=INTEGER},
      </if>
      <if test="record.refundNo != null">
        refund_no = #{record.refundNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundCreateTime != null">
        refund_create_time = #{record.refundCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundModifyTime != null">
        refund_modify_time = #{record.refundModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update refund_requisition
    set 
      requisition_no = #{record.requisitionNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      sum_return_amount = #{record.sumReturnAmount,jdbcType=DECIMAL},
      can_return_amount = #{record.canReturnAmount,jdbcType=DECIMAL},
      factorage = #{record.factorage,jdbcType=DECIMAL},
      fee_rate = #{record.feeRate,jdbcType=DECIMAL},
      customer_login_name = #{record.customerLoginName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      creator_name = #{record.creatorName,jdbcType=VARCHAR},
      modifier = #{record.modifier,jdbcType=INTEGER},
      refund_no = #{record.refundNo,jdbcType=VARCHAR},
      refund_create_time = #{record.refundCreateTime,jdbcType=TIMESTAMP},
      refund_modify_time = #{record.refundModifyTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuxl.mybatis.entities.RefundRequisition">
    update refund_requisition
    <set>
      <if test="requisitionNo != null">
        requisition_no = #{requisitionNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sumReturnAmount != null">
        sum_return_amount = #{sumReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="canReturnAmount != null">
        can_return_amount = #{canReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="factorage != null">
        factorage = #{factorage,jdbcType=DECIMAL},
      </if>
      <if test="feeRate != null">
        fee_rate = #{feeRate,jdbcType=DECIMAL},
      </if>
      <if test="customerLoginName != null">
        customer_login_name = #{customerLoginName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="creatorName != null">
        creator_name = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=INTEGER},
      </if>
      <if test="refundNo != null">
        refund_no = #{refundNo,jdbcType=VARCHAR},
      </if>
      <if test="refundCreateTime != null">
        refund_create_time = #{refundCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundModifyTime != null">
        refund_modify_time = #{refundModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuxl.mybatis.entities.RefundRequisition">
    update refund_requisition
    set requisition_no = #{requisitionNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      sum_return_amount = #{sumReturnAmount,jdbcType=DECIMAL},
      can_return_amount = #{canReturnAmount,jdbcType=DECIMAL},
      factorage = #{factorage,jdbcType=DECIMAL},
      fee_rate = #{feeRate,jdbcType=DECIMAL},
      customer_login_name = #{customerLoginName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=INTEGER},
      refund_no = #{refundNo,jdbcType=VARCHAR},
      refund_create_time = #{refundCreateTime,jdbcType=TIMESTAMP},
      refund_modify_time = #{refundModifyTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.xuxl.mybatis.entities.RefundRequisitionCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund_requisition
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>