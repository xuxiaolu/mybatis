<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuxl.mybatis.mapper.RefundRequisitionDetailMapper">
  <resultMap id="BaseResultMap" type="com.xuxl.mybatis.entities.RefundRequisitionDetail">
    <id column="id" javaType="Long" jdbcType="BIGINT" property="id" />
    <result column="requisition_no" jdbcType="VARCHAR" property="requisitionNo" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="card_denomination" jdbcType="DECIMAL" property="cardDenomination" />
    <result column="card_balance" jdbcType="DECIMAL" property="cardBalance" />
    <result column="card_factorage" jdbcType="DECIMAL" property="cardFactorage" />
    <result column="card_return_amount" jdbcType="DECIMAL" property="cardReturnAmount" />
    <result column="card_type" jdbcType="VARCHAR" property="cardType" />
    <result column="card_status" jdbcType="VARCHAR" property="cardStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
    <result column="modifier" jdbcType="INTEGER" property="modifier" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, requisition_no, card_no, card_denomination, card_balance, card_factorage, card_return_amount, 
    card_type, card_status, create_time, modify_time, creator, modifier, version
  </sql>
  <select id="selectByExample" parameterType="com.xuxl.mybatis.entities.RefundRequisitionDetailCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund_requisition_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from refund_requisition_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from refund_requisition_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xuxl.mybatis.entities.RefundRequisitionDetailCriteria">
    delete from refund_requisition_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xuxl.mybatis.entities.RefundRequisitionDetail" useGeneratedKeys="true">
    insert into refund_requisition_detail (requisition_no, card_no, card_denomination, 
      card_balance, card_factorage, card_return_amount, 
      card_type, card_status, create_time, 
      modify_time, creator, modifier, 
      version)
    values (#{requisitionNo,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, #{cardDenomination,jdbcType=DECIMAL}, 
      #{cardBalance,jdbcType=DECIMAL}, #{cardFactorage,jdbcType=DECIMAL}, #{cardReturnAmount,jdbcType=DECIMAL}, 
      #{cardType,jdbcType=VARCHAR}, #{cardStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=INTEGER}, #{modifier,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xuxl.mybatis.entities.RefundRequisitionDetail" useGeneratedKeys="true">
    insert into refund_requisition_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="requisitionNo != null">
        requisition_no,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
      <if test="cardDenomination != null">
        card_denomination,
      </if>
      <if test="cardBalance != null">
        card_balance,
      </if>
      <if test="cardFactorage != null">
        card_factorage,
      </if>
      <if test="cardReturnAmount != null">
        card_return_amount,
      </if>
      <if test="cardType != null">
        card_type,
      </if>
      <if test="cardStatus != null">
        card_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="requisitionNo != null">
        #{requisitionNo,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="cardDenomination != null">
        #{cardDenomination,jdbcType=DECIMAL},
      </if>
      <if test="cardBalance != null">
        #{cardBalance,jdbcType=DECIMAL},
      </if>
      <if test="cardFactorage != null">
        #{cardFactorage,jdbcType=DECIMAL},
      </if>
      <if test="cardReturnAmount != null">
        #{cardReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="cardType != null">
        #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardStatus != null">
        #{cardStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xuxl.mybatis.entities.RefundRequisitionDetailCriteria" resultType="java.lang.Long">
    select count(*) from refund_requisition_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update refund_requisition_detail
    <set>
      <if test="record.requisitionNo != null">
        requisition_no = #{record.requisitionNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null">
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cardDenomination != null">
        card_denomination = #{record.cardDenomination,jdbcType=DECIMAL},
      </if>
      <if test="record.cardBalance != null">
        card_balance = #{record.cardBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.cardFactorage != null">
        card_factorage = #{record.cardFactorage,jdbcType=DECIMAL},
      </if>
      <if test="record.cardReturnAmount != null">
        card_return_amount = #{record.cardReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.cardType != null">
        card_type = #{record.cardType,jdbcType=VARCHAR},
      </if>
      <if test="record.cardStatus != null">
        card_status = #{record.cardStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.modifier != null">
        modifier = #{record.modifier,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update refund_requisition_detail
    set 
      requisition_no = #{record.requisitionNo,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      card_denomination = #{record.cardDenomination,jdbcType=DECIMAL},
      card_balance = #{record.cardBalance,jdbcType=DECIMAL},
      card_factorage = #{record.cardFactorage,jdbcType=DECIMAL},
      card_return_amount = #{record.cardReturnAmount,jdbcType=DECIMAL},
      card_type = #{record.cardType,jdbcType=VARCHAR},
      card_status = #{record.cardStatus,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=INTEGER},
      modifier = #{record.modifier,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuxl.mybatis.entities.RefundRequisitionDetail">
    update refund_requisition_detail
    <set>
      <if test="requisitionNo != null">
        requisition_no = #{requisitionNo,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="cardDenomination != null">
        card_denomination = #{cardDenomination,jdbcType=DECIMAL},
      </if>
      <if test="cardBalance != null">
        card_balance = #{cardBalance,jdbcType=DECIMAL},
      </if>
      <if test="cardFactorage != null">
        card_factorage = #{cardFactorage,jdbcType=DECIMAL},
      </if>
      <if test="cardReturnAmount != null">
        card_return_amount = #{cardReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="cardType != null">
        card_type = #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardStatus != null">
        card_status = #{cardStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuxl.mybatis.entities.RefundRequisitionDetail">
    update refund_requisition_detail
    set requisition_no = #{requisitionNo,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      card_denomination = #{cardDenomination,jdbcType=DECIMAL},
      card_balance = #{cardBalance,jdbcType=DECIMAL},
      card_factorage = #{cardFactorage,jdbcType=DECIMAL},
      card_return_amount = #{cardReturnAmount,jdbcType=DECIMAL},
      card_type = #{cardType,jdbcType=VARCHAR},
      card_status = #{cardStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=INTEGER},
      modifier = #{modifier,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.xuxl.mybatis.entities.RefundRequisitionDetailCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund_requisition_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>